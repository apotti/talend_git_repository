package routines;

import java.math.BigDecimal;
import java.math.MathContext;

/*
 * user specification: the function's comment should contain keys as follows: 1. write about the function's comment.but
 * it must be before the "{talendTypes}" key.
 * 
 * 2. {talendTypes} 's value must be talend Type, it is required . its value should be one of: String, char | Character,
 * long | Long, int | Integer, boolean | Boolean, byte | Byte, Date, double | Double, float | Float, Object, short |
 * Short
 * 
 * 3. {Category} define a category for the Function. it is required. its value is user-defined .
 * 
 * 4. {param} 's format is: {param} <type>[(<default value or closed list values>)] <name>[ : <comment>]
 * 
 * <type> 's value should be one of: string, int, list, double, object, boolean, long, char, date. <name>'s value is the
 * Function's parameter name. the {param} is optional. so if you the Function without the parameters. the {param} don't
 * added. you can have many parameters for the Function.
 * 
 * 5. {example} gives a example for the Function. it is optional.
 */
public class GenericValidation {

    /**
     * 
     * @param message
     * @return
     */
    
    public static boolean isNotNullEmpty(String message) {
    	boolean status = false;
        if(message!=null && !message.isEmpty()){
        	status = true;
        }
        return status;
    }
    
    /**
     * 
     * @param var1
     * @param var2
     * @return
     */
    public static BigDecimal calculateDiv(BigDecimal var1,BigDecimal var2){
    	BigDecimal var3= BigDecimal.ZERO;
    	if(var1!=null && var2!=null
    			&& var1.signum()==1 && var2.signum()==1 ){
    		//var3 = var1.divide(var2);
    		var3= var1.divide (var2, MathContext.DECIMAL128); 
    		
    	}
    	
    	return var3;
    }
    
    /**
     * 
     * @param var1
     * @param var2
     * @return
     */
    public static BigDecimal calculateDiv(BigDecimal var1,int var2){
    	BigDecimal var3= BigDecimal.ZERO;
    	if(var1!=null
    			&& var1.signum()==1 && var2>0 ){
    		//var3 = var1.divide(var2);
    		var3= var1.divide (new BigDecimal(var2+""), MathContext.DECIMAL128); 
    		
    	}
    	
    	return var3;
    }
    
    /**
     * 
     * @param var1
     * @return
     */
    public static BigDecimal checkZero(BigDecimal var1){
    	BigDecimal var2 = BigDecimal.ZERO;
    	
    	if(var1!=null){
    		if(!(var1.compareTo(BigDecimal.ZERO)==0)){
    			var2 = var1;
    		}
    	}
    	return var2;
    }
    
    public static boolean checkBigDecZero(BigDecimal var1){
    	boolean flag = false;
    	if(var1!=null && var1.signum()!=0){
    		flag = true;
    	}
    	return flag;
    }
    
    
    public static boolean getStoreDeptNbr(String storeDeptNbr){
    	boolean flag= false;
    	if(isNotNullEmpty(storeDeptNbr)){
    		if(!(storeDeptNbr.equals("001") || storeDeptNbr.equals("015"))){
    			flag = true;
    		}
    	}
    	return flag;
    }
    
    public static String getNewLine(String var){
    	String newLine = null;
    	int asciiNum = Integer.parseInt(var);
    	if(asciiNum==10){
    		newLine = Character.toString((char)10);
    	}else{
    		newLine = Character.toString((char)13)+Character.toString((char)10);
    	}
    	return newLine;
    }
    
    public static void main(String args[]){
    	int abc = 9999;
    	System.out.println("abc is:::"+String.format("%04d", abc));
    	int abc1 = 9;
    	System.out.println("abc1 is:::"+String.format("%04d", abc1));
    }
    
}
